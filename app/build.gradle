plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'jacoco'
    id 'dagger.hilt.android.plugin'
}

jacoco {
    toolVersion = "0.8.4"
}


//To include Robolectric tests (leverage simulated android framework) in the Jacoco report,
//search all tasks of Test type and enable it.
tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    def coverageSourceDirs = [
            "src/main/java",
            "src/main/kotlin"
    ]
    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*'
    ]
    def javaClasses = fileTree(
            dir: "$buildDir/intermediates/app_classes/debug",
            excludes: fileFilter
    )
    def kotlinClasses = fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: fileFilter
    )
    classDirectories.from = files([ javaClasses ], [kotlinClasses])
    additionalSourceDirs.from = files(coverageSourceDirs)
    sourceDirectories.from = files(coverageSourceDirs)
    executionData.from = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code_coverage/debugAndroidTest/connected/*.ec"
    ])
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

android {
    compileSdkVersion AndroidSdk.compileSdk
    buildToolsVersion AndroidSdk.buildTools

    defaultConfig {
        applicationId AndroidClient.appId
        minSdkVersion AndroidSdk.minSdk
        targetSdkVersion AndroidSdk.targetSdk
        versionCode AndroidClient.versionCode
        versionName AndroidClient.versionName

        testInstrumentationRunner "com.ahmedmolawale.starwars.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            testCoverageEnabled true //get coverage report for instrumentation tests
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }

    testOptions {
        execution 'ANDROID_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests { //do this to include android resources for roboelectric test
            includeAndroidResources = true
        }
    }
    packagingOptions {
        exclude 'META-INF/*'
    }
}

dependencies {

    def coroutinesVersion = "1.4.2"
    def room_version = "2.2.6"
    def mockk_version = "1.10.5"
    def robolectricVersion = "4.5"
    def runnerVersion = "1.3.0"
    def textCoreVersion = "1.3.0"
    def jUnitVersion = "4.13.1"
    def androidXTestVersion = "1.1.2"
    def truthVersion = "1.1"
    def androidArchTextVersion = "2.1.0"


    //core
    implementation Libraries.kotlinStd
    implementation Libraries.androidCore
    implementation Libraries.fragmentKTX
    implementation Libraries.appCompat
    implementation Libraries.materialDesign
    implementation Libraries.constraintLayout


    //hilt for DI
    implementation Libraries.hilt
    kapt Libraries.hiltCompiler


    //retrofit
    implementation Libraries.retrofit
    implementation Libraries.moshiConverter
    implementation Libraries.okHTTPLogger


    //persistence
    implementation Libraries.room
    kapt Libraries.roomCompiler
    implementation Libraries.roomKTX

    //shimmer
    implementation Libraries.shimmer

    //coroutines
    implementation Libraries.coroutinesAndroid


    testImplementation TestLibraries.testCore
    testImplementation TestLibraries.archCore
    testImplementation TestLibraries.junit
    testImplementation TestLibraries.androidX
    testImplementation TestLibraries.truth
    testImplementation TestLibraries.coroutines
    testImplementation TestLibraries.room
    testImplementation TestLibraries.mockk
    testImplementation TestLibraries.testRunner
    testImplementation TestLibraries.robolectric
//    testImplementation "junit:junit:$jUnitVersion"
//    testImplementation "androidx.test.ext:junit:$androidXTestVersion"
//    testImplementation "com.google.truth:truth:$truthVersion"
//    testImplementation "androidx.arch.core:core-testing:$androidArchTextVersion"
//    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
//    testImplementation "androidx.room:room-testing:$room_version"
//    testImplementation "io.mockk:mockk:$mockk_version"
//    testImplementation "androidx.test:runner:$runnerVersion"
//    testImplementation "org.robolectric:robolectric:$robolectricVersion"



    androidTestImplementation TestLibraries.archCore
    androidTestImplementation TestLibraries.junit
    androidTestImplementation TestLibraries.androidX
    androidTestImplementation TestLibraries.truth
    androidTestImplementation TestLibraries.coroutines
    androidTestImplementation TestLibraries.testRunner
    androidTestImplementation TestLibraries.hilt
    kaptAndroidTest TestLibraries.hiltKapt
//    androidTestImplementation "junit:junit:$jUnitVersion"
//    androidTestImplementation "androidx.test.ext:junit:$androidXTestVersion"
//    androidTestImplementation "com.google.truth:truth:$truthVersion"
//    androidTestImplementation "androidx.arch.core:core-testing:$androidArchTextVersion"
//    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
////    androidTestImplementation "androidx.room:room-testing:$room_version"
//    androidTestImplementation "androidx.test:runner:$runnerVersion"
//    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.31-alpha'
//    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.31-alpha'
}